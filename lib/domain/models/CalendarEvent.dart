import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:syncfusion_flutter_calendar/calendar.dart';
import 'package:uuid/uuid.dart';

import 'Professor.dart';
import 'Room.dart';
import 'Course.dart';

class CalendarEvent extends Appointment {
  @override
  final String id;
  final String title;
  final String description;
  final Professor professor;
  final Room room;
  final Course course;

  CalendarEvent({
    required this.id,
    required this.title,
    required this.description,
    required this.professor,
    required this.room,
    required this.course,
    required DateTime startTime,
    required DateTime endTime,
  }) : super(
    startTime: startTime,
    endTime: endTime,
    subject: title,
  );

  factory CalendarEvent.autogenerated({
    required String title,
    required String description,
    required Professor professor,
    required Room room,
    required Course course,
    required DateTime startTime,
    required DateTime endTime,
  }) {
    String generatedId = Uuid().v4();

    return CalendarEvent(
      id: generatedId,
      title: title,
      description: description,
      professor: professor,
      room: room,
      course: course,
      startTime: startTime,
      endTime: endTime,
    );
  }

  factory CalendarEvent.fromMap(Map<String, dynamic> map) {
    return CalendarEvent(
      id: map['id'],
      title: map['title'] ?? '',
      description: map['description'] ?? '',
      professor: Professor.fromMap(map['professor'] ?? {}),
      room: Room.fromMap(map['room'] ?? {}),
      course: Course.fromMap(map['course'] ?? {}),
      startTime: (map['startTime'] as Timestamp?)?.toDate() ?? DateTime.now(),
      endTime: (map['endTime'] as Timestamp?)?.toDate() ?? DateTime.now(),
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'title': title,
      'description': description,
      'professor': professor.toJson(),
      'room': room.toMap(),
      'course': course.toMap(),
      'startTime': Timestamp.fromDate(startTime),
      'endTime': Timestamp.fromDate(endTime),
    };
  }

  @override
  List<Object?> get props => [id, startTime, endTime, title, description];

}
